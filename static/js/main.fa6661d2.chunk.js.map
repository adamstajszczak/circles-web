{"version":3,"sources":["assets/circles-logo.svg","assets/intro00.svg","assets/intro01.svg","assets/intro02.svg","components/pages/Home/styles.ts","components/pages/Home/trans.ts","store/context.ts","store/hooks.ts","store/reducer.ts","components/pages/Home/index.tsx","components/pages/Splash/styles.ts","components/utils/Flex.tsx","utils/hooks/general.ts","storage/hooks.ts","storage/storage.ts","api/client.ts","api/commands.ts","api/hooks.ts","config.ts","components/pages/Splash/index.tsx","api/utils.ts","store/actions.ts","components/pages/Intro/styles.ts","components/pages/Intro/trans.ts","components/pages/Intro/IntroView.tsx","components/pages/Intro/index.tsx","components/pages/Profile/styles.ts","components/pages/Profile/trans.ts","components/pages/Profile/index.tsx","Routes.tsx","theme.ts","utils/hooks/locale.ts","store/StoreProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","root","color","palette","primary","main","translations","preset","title","en_US","pl_PL","de_DE","yes","INITIAL_STATE","Object","freeze","currentAccount","undefined","StoreContext","React","createContext","useStore","stateFn","useContext","useDispatch","context","action","console","log","type","payload","setStore","state","changes","reduceState","Home","history","useHistory","useLittera","translated","classes","className","Button","onClick","push","label","logo","width","height","Flex","props","reducedProps","_props","args","key","includes","reduceProps","style","display","children","id","useSignal","useState","setState","useStorage","storageFn","localStorage","Client","url","this","entries","map","e","JSON","stringify","join","command","Promise","resolve","reject","once","cmd","exec","makeArguments","reqUrl","headers","Headers","fetch","mode","then","response","json","parsed_response","catch","Command","status","data","AccountInfo","account_id","cli","Splash","dispatch","timeoutRef","useRef","currentAccountId","storage","fn","ref","signal","current","value","val","useEffect","useForkedState","rq","request","a","_args","execute","useCommand","account","location","pathname","setTimeout","clearTimeout","alignItems","justifyContent","src","alt","introViewRoot","maxWidth","margin","introViewContentWrapper","marginTop","firstTitle","secondTitle","thirdTitle","ProgressIcons","activePart","active","ProgressIcon","useTheme","Icon","opacity","fontSize","IntroView","partId","prevButtonText","nextButtonText","flexDirection","image","Typography","variant","align","paragraph","description","onPrev","onNext","Intro","setActivePart","handleNext","useCallback","ap","handlePrev","intro00","intro01","intro02","Profile","CircularProgress","Routes","exact","path","component","createMuiTheme","LOCALES","PRESET","no","StoreProvider","initialState","setValue","Provider","App","useLocale","language","setLanguage","ThemeProvider","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa6661d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circles-logo.b212bb26.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro00.563800af.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro01.37601bb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro02.1847156e.svg\";","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.primary.main,\n    }\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Home\",\n        pl_PL: \"Strona główna\",\n        de_DE: \"Startseite\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React from \"react\";\nimport { IAccount } from \"types\";\n\nexport interface IState {\n    currentAccount?: IAccount;\n}\n\nexport const INITIAL_STATE: IState = Object.freeze({\n    currentAccount: undefined,\n})\n\n/**\n * Our holy Store!\n */\nexport const StoreContext = React.createContext<[IState, React.Dispatch<React.SetStateAction<IState>>]>([INITIAL_STATE, () => {}]);","import { useContext } from \"react\"\nimport { StoreContext, IState } from \"./context\";\nimport { reduceState } from \"./reducer\";\n\n/**\n * Access Store variables.\n * @param stateFn Callback providing Store state.\n * @example const myValue = useStore(state => state.myValue);\n */\nexport const useStore = <T>(stateFn: (state: IState) => T) => {\n    const context = useContext(StoreContext);\n\n    return stateFn(context[0]);\n}\n\nexport type StoreAction<T=any> = { type: string, payload?: T }\n\n/**\n * Returns dispatch method for Store.\n * @example \n * const dispatch = useDispatch();\n * ...\n * dispatch({ type: \"ACTION_NAME\", payload: \"changes\" });\n */\nexport const useDispatch = () => {\n    const context = useContext(StoreContext);\n\n    return <T=any>(action: StoreAction<T>) => {\n        console.log(\"📁\", action.type, \"=>\", action.payload);\n        reduceState(context[1], action)\n    };\n}","import { IState } from \"./context\";\nimport { StoreAction } from \"./hooks\";\n\nexport const reduceState = (setStore: React.Dispatch<React.SetStateAction<IState>>, action: StoreAction) => {\n    setStore((state: IState) => {\n        const changes: Partial<IState> = {};\n\n        // Add actions here!\n        // ! This might seem a little complicated but some refactoring might help.\n        switch(action.type) {\n            case \"SET_CURRENT_ACCOUNT\":\n                changes.currentAccount = {...action.payload};\n                break;\n        }\n\n        return {...state, ...changes}\n    });\n}","import React from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStore } from \"store/hooks\";\n\n\n/**\n * Home page component.\n */\nconst Home = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    const currentAccount = useStore(state => state.currentAccount);\n\n    return <div className={classes.root}>\n        {translated.title}\n\n        {currentAccount && <Button onClick={() => history.push(\"/profile\")}>{currentAccount.label} Profile</Button>}\n    </div>\n}\n\nexport default Home;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.primary.main,\n    },\n\n    logo: {\n        width: \"300px\",\n        height: \"300px\"\n    }\n  }));\n\n  export default useStyles;\n","import React from \"react\";\n\ntype FlexAlignType =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'stretch'\n  | 'baseline'\n\ntype FlexProperties = {\n  inline?: boolean\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse'\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  alignContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'stretch'\n    | 'space-between'\n    | 'space-around'\n  alignItems?: FlexAlignType\n}\n\ntype FlexProps = {\n  children: React.ReactNode\n  className?: string\n  style?: object\n  width?: number | string\n  height?: number | string\n} & FlexProperties\n\nconst reduceProps = (props: FlexProps, ...args: string[]) => {\n    let _props = {...props};\n\n    for(var key in _props) {\n        // @ts-ignore\n        if(args.includes(key)) delete _props[key];\n    }\n\n    return _props;\n}\n\n/**\n * A component for easier flex-box implementation.\n * @example <Flex justifyContent=\"space-between\" alignItems=\"center\">...</Flex>\n */\nconst Flex = (props: FlexProps) => {\n  const reducedProps = reduceProps(props, \"children\", \"className\");\n\n  const style = Object.freeze({\n    display: \"flex\",\n      ...reducedProps,\n  });\n\n  return <div style={style} className={props.className}>{props.children}</div>\n}\n\nexport default Flex;","import { useState, useRef, useEffect } from \"react\";\n\nexport const useForkedState = <T extends any[], R>(fn: (...args: T) => R, ...args: T) => {\n    const ref = useRef(null as unknown as [R, (value: R) => void]);\n    const signal = useSignal();\n\n    if(ref.current === null) {\n        const value: R = fn(...args);\n        const setState = (val: R) => { ref.current[0] = val; signal(); }\n\n        ref.current = [ value, setState ];\n    }\n\n    useEffect(() => { \n        const value = fn(...args);\n\n        if(ref.current[0] !== value) \n            ref.current[1](value); \n    }, [fn, args]);\n\n    return ref.current;\n}\n\nlet id = 0;\nexport const useSignal = () => {\n    const [, setState] = useState(0);\n\n    const signal = () => {\n        setState(id++);\n    }\n\n    return signal;\n}","import { IStorage, getLocalStorage, setLocalStorageValue } from \"./storage\";\nimport { useRef } from \"react\";\nimport { useSignal } from \"utils/hooks/general\";\n\n/**\n * Access Local Storage variables.\n * @param storageFn Callback providing Local Storage state.\n * @example const myValue = useStorage(storage => storage.myValue);\n */\nexport const useStorage = <T>(storageFn: (storage: IStorage) => T) => {\n    const storage = getLocalStorage();\n\n    return storageFn(storage);\n}\n\n/**\n * Returns local storage value setter.\n * @example\n * const storageSetter = useStorageSetter();\n * ...\n * storageSetter(\"currentAccountId\", \"tester\");\n */\nexport const useStorageSetter = () => {\n    const signal = useSignal();\n    const ref = useRef((key: keyof IStorage, value: string) => {\n        \n        setLocalStorageValue(key, value);\n        signal();\n    });\n\n    return ref.current;\n}","export interface IStorage {\n    currentAccountId?: string;\n}\n\nexport const getLocalStorageValue = (key: keyof IStorage) => {\n    const storage = localStorage as unknown as IStorage;\n\n    return storage[key];\n}\n\nexport const getLocalStorage = () => {\n    return localStorage as unknown as IStorage;\n}\n\nexport const setLocalStorageValue = (key: keyof IStorage, value: string) => {\n    localStorage.setItem(key, value);\n}","export type TResponse = {status: number, message?: string, data: any};\n\nexport interface IClient {\n    url: string\n}\n\nexport class Client implements IClient {\n    url: string\n\n    constructor(url: string) {\n        this.url = url;\n    }\n\n    makeArguments(args: {[key: string]: string}) {\n        return Object.entries(args).map((e => `${e[0]}=${typeof e[1] === \"object\" ? JSON.stringify(e[1]) : e[1]}`)).join(\"&\");\n    }\n\n    execute(command: ICommand) {\n        return new Promise<{status: number, data: any}>((resolve, reject) => {\n            let once = false;\n            const cmd = command.exec[0];\n            const args = this.makeArguments(command.exec[1]);\n    \n            const reqUrl = `${this.url}${cmd}?${args}`;\n\n            const handleResolve = (response: any) => {\n                if(!once) {\n                    once = true;\n                    \n                    const parsed_response = response\n                    \n                    console.log(\"📶\", cmd, \"=>\", parsed_response);\n                    resolve(parsed_response);\n                }\n                \n            }\n\n            let headers = new Headers({\n                'Access-Control-Allow-Origin':'*',\n                'Content-Type': 'multipart/form-data'\n            });\n\n            fetch(reqUrl, { mode: \"cors\", headers })\n                .then(response => response.json())\n                .then(handleResolve)\n                .catch(reject);\n        })\n    }\n}\n\n\nexport interface ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    parse(status: number, data: any): any\n}\n\nexport class Command implements ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    constructor(exec: [string, {[key: string]: any}]) {\n        this.exec = exec;\n        this.status = 0;\n    }\n\n    parse(status: number, data: any) {\n        return data;\n    }\n}","import { Command } from \"./client\";\nimport { IAccount } from \"types\";\n\nexport class AccountInfo extends Command {\n    constructor(account_id: string) {\n        super([\"accountInfo\", { account_id }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountList extends Command {\n    constructor(volume?: number) {\n        super([\"accountList\", { volume }]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountCreate extends Command {\n    constructor(data: {email: string, password: string}) {\n        super([\"accountCreate\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}","import { useRef } from 'react';\nimport { Client } from './client';\nimport { useSignal } from '../utils/hooks/general';\nimport config from '../config';\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\nexport const useCommand = (command: any, ...args: any[]) => {\n    const ref = useRef(null as unknown as { status: number, data?: any, message?: string });\n    const signal = useSignal();\n    \n    if(ref.current === null) {\n        ref.current = { status: 102 };\n        \n        const fn = async () => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            ref.current = rq;\n            signal();\n        }\n        fn();\n    }\n    \n    return ref.current;\n}","export default {\n    host_url: \"https://us-central1-ping-82fee.cloudfunctions.net/\"\n}","import React, { useEffect, useRef } from 'react';\nimport logo from \"assets/circles-logo.svg\";\n//import translations from \"./trans\";\nimport useStyles from \"./styles\";\n//import {useLittera} from \"react-littera\"\nimport Flex from 'components/utils/Flex';\nimport { useHistory } from 'react-router-dom';\nimport { useStore, useDispatch } from 'store/hooks';\nimport { useStorage } from 'storage/hooks';\nimport { AccountInfo } from 'api/commands';\nimport { useCommand } from 'api/hooks';\nimport { useForkedState } from 'utils/hooks/general';\nimport { isLoaded } from 'api/utils';\nimport { setCurrentAccount } from 'store/actions';\n\nconst Splash = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    //const [translated] = useLittera(translations);\n\n    const dispatch = useDispatch();\n    const timeoutRef = useRef<any>();\n\n    const currentAccount = useStore(state => state.currentAccount);\n    const currentAccountId = useStorage(storage => storage.currentAccountId);\n\n    const accountRq = useCommand(AccountInfo, currentAccountId);\n    const [account] = useForkedState(rq => isLoaded(rq) ? rq.data : null, accountRq);\n\n    console.log(\"Current Account =>\", currentAccount)\n    console.log(\"Current Account Id =>\", currentAccountId)\n    console.log(history.location.pathname)\n\n    useEffect(() => {\n        timeoutRef.current = setTimeout(() => {\n            history.push(\"/intro\");\n        }, 5000);\n\n        return () => clearTimeout(timeoutRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if(account && !currentAccount) {\n            dispatch(setCurrentAccount(account));\n            clearTimeout(timeoutRef.current);\n            history.push(\"/home\")\n        }\n    }, [account, dispatch, currentAccount, history]);\n\n    return <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\" height=\"100vh\">\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n        </Flex>\n}\n\nexport default Splash;","export const isLoaded = (request: any) => {\n    return request !== null && request.status !== 102\n}","import { IAccount } from \"types\";\n\n/**\n * Set current account.\n * @param payload Account info.\n * @see api/commans/AccountInfo\n */\nexport const setCurrentAccount = (payload: IAccount) => {\n    return ({ type: \"SET_CURRENT_ACCOUNT\", payload });\n}","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      \n    },\n    introViewRoot:{\n        maxWidth: \"1200px\",\n        margin: \"0 auto\",\n    },\n    introViewContentWrapper:{\n      maxWidth: \"60%\",\n      marginTop: \"5%\",\n    },\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Intro\",\n        pl_PL: \"Intro\",\n        de_DE: \"Intro\"\n    },\n    firstTitle: {\n        en_US: \"Welcome to safe chat!\",\n        pl_PL: \"Pierwszy Part\",\n        de_DE: \"Erstes Part\"\n    },\n\n    secondTitle: {\n        en_US: \"Available everywhere\",\n        pl_PL: \"Drugi Part\",\n        de_DE: \"Zweiten Part\"\n    },\n\n    thirdTitle: {\n        en_US: \"Reliable and Stable\",\n        pl_PL: \"Trzeci Part\",\n        de_DE: \"Dreien Part\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React from \"react\";\nimport { Button, Typography, Icon, useTheme } from \"@material-ui/core\";\nimport Flex from \"components/utils/Flex\";\nimport useStyles from \"./styles\";\n\ntype IntroViewProps = {\n    partId: number;\n    activePart: number;\n    \n    title: string;\n    description: string;\n    image: any;\n    \n    onNext: () => void;\n    onPrev: () => void;\n}\n\nconst IntroView = (props: IntroViewProps) => {\n    const classes = useStyles();\n\n    // Prevent rendering if not active.\n    if(props.activePart !== props.partId) return null;\n\n    // TODO: Add translations.\n    const prevButtonText = props.partId === 0 ? \"Skip\" : \"Back\";\n    const nextButtonText = props.partId === 2 ? \"Continue\" : \"Next\";\n\n    return <div className={classes.introViewRoot} style={{height: \"100vh\"}}>\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" height=\"90vh\" alignItems=\"center\" justifyContent=\"center\">\n                {/* Image */}\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                    <img src={props.image} alt={props.title} style={{maxWidth: \"300px\", height: \"auto\"}} />\n                </Flex>\n\n                {/* Content */}\n                <Flex className={classes.introViewContentWrapper} alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n                    <Typography variant=\"h2\">{props.title}</Typography>\n                    <Typography align=\"center\" paragraph >{props.description}</Typography>\n                </Flex>\n            </Flex>\n\n            {/* Actions */}\n            <Flex justifyContent=\"space-evenly\" height=\"10vh\" alignItems=\"center\" width=\"60%\">\n                <Button onClick={props.onPrev}>{prevButtonText}</Button>\n                <ProgressIcons activePart={props.activePart} />\n                <Button variant=\"contained\" color=\"primary\" onClick={props.onNext}>{nextButtonText}</Button>\n            </Flex>\n        </Flex>\n        \n        \n        \n        </div>\n}\n\nconst ProgressIcons = ({activePart} : {activePart: number}) => {\n    \n    return  <Flex justifyContent=\"center\" alignItems=\"center\">\n                <ProgressIcon active={activePart >= 0} />\n                <ProgressIcon active={activePart >= 1} />\n                <ProgressIcon active={activePart >= 2} />\n            </Flex>\n}\n\nconst ProgressIcon = ({active}: {active: boolean}) => {\n    const theme = useTheme();\n\n    return <Icon style={{ opacity: active ? 1 : 0.15, fontSize: \"14px\", color: active ? theme.palette.primary.main : \"#000\" }}>lens</Icon>;\n}\n\nexport default IntroView;\n","import React, { useState, useCallback } from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport IntroView from \"./IntroView\";\n\nimport intro00 from \"assets/intro00.svg\";\nimport intro01 from \"assets/intro01.svg\";\nimport intro02 from \"assets/intro02.svg\";\n\nimport { useHistory } from \"react-router-dom\";\n\n/**\n * Home page component.\n */\nconst Intro = () => {\n    // history.push(\"/path\");\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    // Controls the active part.\n    const [activePart, setActivePart] = useState<number>(0);\n    \n\n    const handleNext = useCallback(() => {\n        // To get the correct result, I'm looking up activePart (ap) passed to setActivePart method instead of using the in scope state variable.\n        setActivePart(ap => { \n\n            // Handle end of intro by navigating to login screen.\n            if(ap === 2) {\n                history.push(\"/login\");\n                // ? Changing value here after navigating might result in a memory leak as the Intro component is then unmounted. Move outside setActivePart and use \"activePart\" variable instead of \"ap\" to prevent state change.\n                return ap;\n            }\n\n            // Increment activePart.\n            return ap+1;\n        });\n    }, [setActivePart, history]);\n\n    const handlePrev = useCallback(() => {\n        setActivePart(ap => {\n\n            if(ap === 0) {\n                history.push(\"/login\");\n                return ap;\n            }\n\n            return ap-1;\n        });\n    }, [setActivePart, history]);\n\n    return <div className={classes.root}>\n        <IntroView activePart={activePart} partId={0} onNext={handleNext} onPrev={handlePrev} image={intro00} title={translated.firstTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n        <IntroView activePart={activePart} partId={1} onNext={handleNext} onPrev={handlePrev} image={intro01} title={translated.secondTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n        <IntroView activePart={activePart} partId={2} onNext={handleNext} onPrev={handlePrev} image={intro02} title={translated.thirdTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n    </div>\n}\n\nexport default Intro;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      \n    }\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Profile\",\n        pl_PL: \"Profil\",\n        de_DE: \"Profil\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { CircularProgress, Typography } from \"@material-ui/core\";\nimport { useStore } from \"store/hooks\";\n\n\n/**\n * Profile page component.\n */\nconst Profile = () => {\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    const currentAccount = useStore(state => state.currentAccount)\n\n    if(!currentAccount) return <CircularProgress />\n\n    return <div className={classes.root}>\n        {translated.title}\n\n        <Typography>{currentAccount.label}</Typography>\n    </div>\n}\n\nexport default Profile;","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { Home, Splash, Intro, Profile } from 'components/pages';\n\nfunction Routes() {\n  \n  return (\n    <Switch>\n      <Route exact path=\"/\"       component={Splash} />\n      <Route exact path=\"/intro\"  component={Intro} />\n      <Route exact path=\"/home\"   component={Home} />\n      <Route exact path=\"/profile\"  component={Profile} />\n      <Route exact component={() => <div>Error page</div>} />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#99d8ff\"\n        }\n    }\n  })","import {useState} from \"react\";\n\nconst LOCALES = Object.freeze([ \"en_US\", \"pl_PL\", \"de_DE\" ]);\n\nconst PRESET = Object.freeze({\n    yes: {\n        en_US: \"Yes\",\n        pl_PL: \"Tak\",\n        de_DE: \"Ja\"\n    },\n    no: {\n        en_US: \"No\",\n        pl_PL: \"Nie\",\n        de_DE: \"Nein\"\n    }\n});\n\nexport const useLocale = () => {\n    const [locale, setLocale] = useState(LOCALES[0]);\n\n    return [locale, setLocale, PRESET];\n}","import React, { useState } from \"react\";\nimport { StoreContext, IState, INITIAL_STATE } from \"./context\";\n\n\ntype StoreProviderProps = {\n    children: JSX.Element;\n    initialState?: IState\n}\n\n/**\n * React component providing Store context.\n */\nconst StoreProvider = ({ children, initialState }: StoreProviderProps) => {\n    const [value, setValue] = useState<IState>(initialState ?? INITIAL_STATE);\n\n    return <StoreContext.Provider value={[value, setValue]}>\n        {children}\n    </StoreContext.Provider>\n}\n\nexport default StoreProvider;","import React from 'react';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport LitteraProvider from \"react-littera\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from './Routes';\nimport theme from \"./theme\";\nimport { useLocale } from './utils/hooks/locale';\nimport StoreProvider from 'store/StoreProvider';\n\nfunction App() {\n  const [language, setLanguage, preset] = useLocale();\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <LitteraProvider language={language} setLanguage={setLanguage} preset={preset}>\n          <Router>\n            <Routes />\n          </Router>\n        </LitteraProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}