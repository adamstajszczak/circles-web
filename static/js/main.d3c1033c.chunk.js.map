{"version":3,"sources":["components/pages/Splash/styles.ts","components/utils/Flex.tsx","store/context.ts","store/hooks.ts","store/reducer.ts","storage/storage.ts","utils/hooks/general.ts","storage/hooks.ts","api/client.ts","api/utils.ts","api/commands.ts","config.ts","store/actions.ts","api/hooks.ts","components/pages/Splash/index.tsx","components/pages/Intro/styles.ts","components/pages/Intro/trans.ts","components/pages/Intro/IntroView.tsx","components/pages/Intro/index.tsx","components/pages/Login/styles.ts","components/pages/Login/trans.ts","api/auth.ts","components/pages/Login/index.tsx","components/pages/Signup/styles.ts","components/pages/Signup/trans.ts","components/pages/Signup/index.tsx","components/pages/Welcome/styles.ts","components/pages/Welcome/trans.ts","components/pages/Welcome/index.tsx","components/pages/Home/styles.ts","components/pages/Home/trans.ts","components/common/AccountPicker/styles.ts","components/common/AccountPicker/index.tsx","components/pages/Home/CreateRoom.tsx","components/pages/Home/index.tsx","components/pages/Profile/styles.ts","components/pages/Profile/trans.ts","components/pages/Profile/index.tsx","api/messages.ts","utils/hooks/sound.ts","components/pages/Room/styles.ts","components/pages/Room/Messages.tsx","utils/general.ts","components/common/MessageInput/styles.ts","components/common/MessageInput/index.tsx","components/pages/Room/MessageForm.tsx","components/pages/Room/RoomView.tsx","components/pages/Room/RecentRooms.tsx","components/pages/Room/index.tsx","Routes.tsx","theme.ts","utils/hooks/locale.ts","store/StoreProvider.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/wave.svg","assets/circles-logo.svg","assets/intro00.svg","assets/intro01.svg","assets/intro02.svg","assets/verifed.svg","assets/celebration.svg","assets/personal.svg"],"names":["useStyles","makeStyles","theme","root","color","palette","primary","main","logo","width","height","Flex","props","reducedProps","_props","args","key","includes","reduceProps","style","Object","freeze","display","rootEl","rootComponent","React","createElement","cloneElement","onClick","className","children","INITIAL_STATE","currentAccount","undefined","StoreContext","createContext","useStore","stateFn","useContext","useDispatch","context","useRef","action","console","log","type","payload","setStore","state","changes","reduceState","current","setLocalStorageValue","value","localStorage","setItem","useSignal","useState","updateState","useCallback","useStorageSetter","signal","removeItem","resetLocalStorageValue","Client","url","this","entries","map","e","JSON","stringify","join","command","Promise","resolve","reject","once","cmd","exec","makeArguments","reqUrl","headers","Headers","fetch","mode","then","response","json","parsed_response","catch","Command","status","data","arrayToStringList","arr","toString","replace","checkType","name","types","Error","AccountInfo","account_id","flags","rooms","contacts","AccountChange","AccountList","included","volume","AccountLogin","token","RoomInfo","room_id","accounts","RoomCreate","label","invite","cli","config","setCurrentAccount","updateCurrentAccount","a","execute","rq","useDispatchCommand","ref","fn","_args","useAccount","updateStore","options","dispatchStore","dispatchCommand","useEffect","id","accountInfoRq","Splash","history","useHistory","location","classes","dispatch","accountIdToken","storage","storageFn","accountLogin","accountInfo","push","initialPath","alignItems","justifyContent","src","alt","introViewRoot","maxWidth","breakpoints","values","md","margin","introViewContentWrapper","marginTop","translations","preset","title","en_US","pl_PL","de_DE","firstTitle","secondTitle","thirdTitle","yes","ProgressIcons","activePart","active","ProgressIcon","useTheme","Icon","opacity","fontSize","IntroView","partId","prevButtonText","nextButtonText","flexDirection","image","Typography","variant","align","paragraph","description","Button","onPrev","onNext","Intro","useLittera","translated","setActivePart","handleNext","ap","handlePrev","intro00","intro01","intro02","minHeight","up","container","padding","spacing","inputWrapper","loginImage","position","right","bottom","imgContainer","overflow","background","dark","wave","zIndex","left","footerWrapper","signInWithPopup","provider","firebase","GoogleAuthProvider","addScope","result","fetchAccountIdToken","error","errorCode","code","errorMessage","message","signInWithCredentials","email","password","signInWithEmailAndPassword","currentUser","getIdToken","idToken","signUpWithCredentials","createUserWithEmailAndPassword","signOut","Login","emailInput","setEmailInput","passwordInput","setPasswordInput","errorMsg","setErrorMsg","isLoading","setIsLoading","handleLogin","user","uid","account","handleInputChange","inputName","event","newValue","target","waveAsset","onSubmit","preventDefault","err","TextField","marginBottom","onChange","Alert","severity","AlertTitle","Fab","aria-label","Backdrop","open","CircularProgress","signImage","Signup","storageSetter","confirmPasswordInput","setConfirmPasswordInput","length","personalImage","welcomeTitle","Welcome","labelField","setLabelField","nameField","setNameField","surname","surnameField","setSurnameField","handleChange","field","handleSubmit","alert","personalInformationImage","paddingBottom","float","SingleAccount","selected","paddingTop","cursor","Avatar","backgroundColor","avatar_url","AccountPicker","setState","val","useForkedState","request","useCommand","contact","prevValue","disabled","multiple","Array","isArray","splice","indexOf","CreateRoom","setError","loading","setLoading","setOpen","setSelected","setLabel","handleClose","newRoom","isSubmitDisabled","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","DialogContent","dividers","DialogActions","autoFocus","RoomLabel","Home","storeDispatch","handleSignOut","gutterBottom","room","Contact","border","favorite","Profile","useMessages","Audio","audio","playing","setPlaying","play","pause","addEventListener","removeEventListener","useAudio","toggle","messages","setMessages","makeRefPath","on","snapshot","msgs","m","flexBasis","down","messagesRoot","minWidth","maxHeight","flexGrow","messageRoot","ownedMessage","alignSelf","notOwnedMessage","borderRadius","avatar","Message","author","isOwned","atob","str","rootClasses","cx","valEl","RegExp","test","href","rel","Messages","roomId","getAuthor","author_id","find","keys","reverse","message_id","inputElement","outline","resize","MessageInput","onKeyPress","shiftKey","placeholder","MessageForm","input","setInput","btoa","focus","handleTextFieldFocus","IconButton","RoomView","params","useParams","roomInfoRq","useRoom","submitMessage","timestamp","Date","newMsgKey","child","updates","update","RecentRoom","currentRoomId","RecentRooms","sort","Room","isMobileOnly","useMediaQuery","Routes","useLocation","pathname","exact","path","component","createMuiTheme","secondary","default","LOCALES","PRESET","no","StoreProvider","initialState","setValue","Provider","App","useLocale","language","setLanguage","ThemeProvider","basename","process","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","usePublicVapidKey","ReactDOM","render","StrictMode","document","getElementById","URL","origin","contentType","get","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.d3c1033c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      color: theme.palette.primary.main,\n    },\n\n    logo: {\n        width: \"300px\",\n        height: \"300px\"\n    }\n  }));\n\n  export default useStyles;\n","import React from \"react\";\n\ntype FlexAlignType =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'stretch'\n  | 'baseline'\n\ntype FlexProperties = {\n  inline?: boolean\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse'\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  alignContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'stretch'\n    | 'space-between'\n    | 'space-around'\n  alignItems?: FlexAlignType\n}\n\ntype FlexProps = {\n  children: React.ReactNode\n  className?: string\n  onClick?: () => void\n  rootComponent?: React.Component\n  style?: object\n  width?: number | string\n  height?: number | string\n} & FlexProperties\n\nconst reduceProps = (props: FlexProps, ...args: string[]) => {\n    let _props = {...props};\n\n    for(var key in _props) {\n        // @ts-ignore\n        if(args.includes(key)) delete _props[key];\n    }\n\n    return _props;\n}\n\n/**\n * A component for easier flex-box implementation.\n * @example <Flex justifyContent=\"space-between\" alignItems=\"center\">...</Flex>\n */\nconst Flex = (props: FlexProps) => {\n  const reducedProps = reduceProps(props, \"children\", \"className\");\n\n  const style = Object.freeze({\n      display: \"flex\",\n      ...reducedProps,\n      ...props.style\n  });\n\n  const rootEl = props.rootComponent ?? React.createElement(\"div\");\n\n  return React.cloneElement(rootEl as React.ReactElement<any>, { onClick: props.onClick, style, className: props.className, children: props.children });\n}\n\nexport default Flex;","import React from \"react\";\nimport { IAccount } from \"types\";\n\nexport interface IState {\n    currentAccount?: IAccount;\n}\n\nexport const INITIAL_STATE: IState = Object.freeze({\n    currentAccount: undefined,\n})\n\n/**\n * Our holy Store!\n */\nexport const StoreContext = React.createContext<[IState, React.Dispatch<React.SetStateAction<IState>>]>([INITIAL_STATE, () => {}]);","import { useContext, useRef } from \"react\"\nimport { StoreContext, IState } from \"./context\";\nimport { reduceState } from \"./reducer\";\n\n/**\n * Access Store variables.\n * @param stateFn Callback providing Store state.\n * @example const myValue = useStore(state => state.myValue);\n */\nexport const useStore = <T>(stateFn: (state: IState) => T) => {\n    const context = useContext(StoreContext);\n\n    return stateFn(context[0]);\n}\n\nexport type StoreAction<T=any> = { type: string, payload?: T }\n\n/**\n * Returns dispatch method for Store.\n * @example \n * const dispatch = useDispatch();\n * ...\n * dispatch({ type: \"ACTION_NAME\", payload: \"changes\" });\n */\nexport const useDispatch = () => {\n    const context = useContext(StoreContext);\n\n    const ref = useRef(<T=any>(action: StoreAction<T>) => {\n        console.log(\"📁\", action.type, \"=>\", action.payload);\n        reduceState(context[1], action)\n    });\n\n    return ref.current;\n}","import { IState } from \"./context\";\nimport { StoreAction } from \"./hooks\";\n\nexport const reduceState = (setStore: React.Dispatch<React.SetStateAction<IState>>, action: StoreAction) => {\n    setStore((state: IState) => {\n        const changes: Partial<IState> = {};\n\n        // Add actions here!\n        // ! This might seem a little complicated but some refactoring might help.\n        switch(action.type) {\n            case \"SET_CURRENT_ACCOUNT\":\n                changes.currentAccount = {...action.payload};\n                break;\n        }\n\n        return {...state, ...changes}\n    });\n}","export interface IStorage {\n    accountIdToken?: string;\n}\n\nexport const getLocalStorageValue = (key: keyof IStorage) => {\n    const storage = localStorage as unknown as IStorage;\n\n    return storage[key];\n}\n\nexport const getLocalStorage = () => {\n    return localStorage as unknown as IStorage;\n}\n\nexport const setLocalStorageValue = (key: keyof IStorage, value: string) => {\n    localStorage.setItem(key, value);\n}\n\nexport const resetLocalStorageValue = (key: keyof IStorage) => {\n    localStorage.removeItem(key);\n}","import { useState, useRef, useEffect, useCallback } from \"react\";\n\nexport const useForkedState = <T extends any[], R>(fn: (...args: T) => R, ...args: T) => {\n    const ref = useRef(null as unknown as [R, (value: R) => void]);\n    const signal = useSignal();\n\n    if(ref.current === null) {\n        const value: R = fn(...args);\n        const setState = (val: R) => { ref.current[0] = val; signal(); }\n\n        ref.current = [ value, setState ];\n    }\n\n    useEffect(() => { \n        const value = fn(...args);\n\n        if(ref.current[0] !== value) \n            ref.current[1](value); \n    }, [fn, args]);\n\n    return ref.current;\n}\n\nexport const useSignal = () => {\n    const [, updateState] = useState();\n    return useCallback(() => updateState({}), []);\n}","import { IStorage, setLocalStorageValue, resetLocalStorageValue } from \"./storage\";\nimport { useRef } from \"react\";\nimport { useSignal } from \"utils/hooks/general\";\n\n/**\n * Access Local Storage variables.\n * @param storageFn Callback providing Local Storage state.\n * @example const myValue = useStorage(storage => storage.myValue);\n */\nexport const useStorage = <T>(storageFn: (storage: IStorage) => T) => {\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return storageFn(localStorage as IStorage)\n}\n\n/**\n * Returns local storage value setter.\n * @example\n * const storageSetter = useStorageSetter();\n * ...\n * storageSetter(\"currentAccountId\", \"tester\");\n */\nexport const useStorageSetter = () => {\n    const signal = useSignal();\n    const ref = useRef((key: keyof IStorage, value?: string | null) => {\n        if(value === undefined || value === null) {\n            resetLocalStorageValue(key);\n        } else {\n            setLocalStorageValue(key, value);\n        }\n        signal();\n    });\n\n    return ref.current;\n}","export type TResponse = {status: number, message?: string, data: any};\n\nexport interface IClient {\n    url: string\n}\n\nexport class Client implements IClient {\n    url: string\n\n    constructor(url: string) {\n        this.url = url;\n    }\n\n    makeArguments(args: {[key: string]: string}) {\n        return Object.entries(args).map((e => `${e[0]}=${typeof e[1] === \"object\" ? JSON.stringify(e[1]) : e[1]}`)).join(\"&\");\n    }\n\n    execute(command: ICommand) {\n        return new Promise<{status: number, data: any}>((resolve, reject) => {\n            let once = false;\n            const cmd = command.exec[0];\n            const args = this.makeArguments(command.exec[1]);\n    \n            const reqUrl = `${this.url}${cmd}?${args}`;\n\n            const handleResolve = (response: any) => {\n                if(!once) {\n                    once = true;\n                    \n                    const parsed_response = response\n                    \n                    console.log(\"📶\", cmd, \"=>\", parsed_response);\n                    resolve(parsed_response);\n                }\n                \n            }\n\n            let headers = new Headers({\n                'Access-Control-Allow-Origin':'*',\n                'Content-Type': 'multipart/form-data'\n            });\n\n            fetch(reqUrl, { mode: \"cors\", headers })\n                .then(response => response.json())\n                .then(handleResolve)\n                .catch(reject);\n        })\n    }\n}\n\n\nexport interface ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    parse(status: number, data: any): any\n}\n\nexport class Command implements ICommand {\n    exec: [string, {[key: string]: any}];\n    status: number;\n\n    constructor(exec: [string, {[key: string]: any}]) {\n        this.exec = exec;\n        this.status = 0;\n    }\n\n    parse(status: number, data: any) {\n        return data;\n    }\n}","export const isLoaded = (request: any) => {\n    return request !== null && request.status !== 102\n}\n\nconst arrayToStringList = (arr: string[]) => \n        arr.toString().replace(/,/g, \", \")\n\n\n// TODO: Support arrays.\nexport const checkType = (name: string, value: any, ...types: string[]) => {\n\n    if(!types.includes(typeof value)) throw new Error(`Expected ${arrayToStringList(types)} for ${name}, got ${typeof value}`);\n}","import { Command } from \"./client\";\nimport { IAccount } from \"types\";\nimport { checkType } from \"./utils\";\n\nexport class AccountInfo extends Command {\n    constructor(account_id: string, flags?: boolean, rooms?: boolean, contacts?: boolean) {\n        super([\"accountInfo\", { account_id, flags: !!flags, rooms: !!rooms, contacts: !!contacts }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountChange extends Command {\n    constructor(account_id: string, changes: { label?: string, name?: string, surname?: string }) {\n        super([\"accountChange\", {account_id, changes: JSON.stringify(changes)}]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountList extends Command {\n    constructor(included?: string[], volume?: number) {\n        super([\"accountList\", { volume, included }]);\n\n        checkType(\"volume\", volume, \"number\", \"undefined\");\n        // TODO: Support arrays. Replace \"object\" with \"array\".\n        checkType(\"included\", included, \"object\", \"undefined\");\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountCreate extends Command {\n    constructor(data: {email: string, password: string, label?: string}) {\n        super([\"accountCreate\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountLogin extends Command {\n    constructor(token: string) {\n        super([\"accountLogin\", { token }]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class AccountFind extends Command {\n    constructor(data: { email?: string, label?: string }) {\n        super([\"accountFind\", data]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\n\n\nexport class RoomInfo extends Command {\n    constructor(room_id: string, accounts?: boolean) {\n        super([\"roomInfo\", { room_id, accounts }]);\n    }\n\n    parse(status: number, data: IAccount) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}\n\nexport class RoomCreate extends Command {\n    constructor(account_id: string, label: string, invite: string[]) {\n        super([\"roomCreate\", { label, invite: [...invite, account_id] }]);\n    }\n\n    parse(status: number, data: any) {\n        if(status !== 200) return data;\n\n        // TODO: Ensure types.\n        \n        return data;\n    }\n}","export default {\n    host_url: \"https://us-central1-ping-82fee.cloudfunctions.net/\"\n}","import { IAccount } from \"types\";\nimport config from \"config\";\nimport { AccountInfo } from \"api/commands\";\nimport { Client } from \"api/client\";\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\n/**\n * Set current account.\n * @param payload Account info.\n * @see api/commands/AccountInfo\n */\nexport const setCurrentAccount = (payload: IAccount | null) => {\n    return ({ type: \"SET_CURRENT_ACCOUNT\", payload });\n}\n\n/**\n * Update current account.\n * @param payload account_id\n * @see api/commands/AccountInfo\n */\nexport const updateCurrentAccount = async (account_id: string) => {\n    const rq = await cli.execute(new AccountInfo(account_id, true, true, true))\n\n    const payload: IAccount = rq.data;\n\n    return ({ type: \"SET_CURRENT_ACCOUNT\", payload });\n}","import { useRef, useEffect } from 'react';\nimport { Client } from './client';\nimport { useSignal } from '../utils/hooks/general';\nimport config from '../config';\nimport { IAccount, IRoom } from 'types';\nimport { AccountInfo, RoomInfo } from './commands';\nimport { useStore, useDispatch } from 'store/hooks';\nimport { setCurrentAccount } from 'store/actions';\n\nconst HOST_URL = config.host_url;\nconst cli = new Client(HOST_URL);\n\nexport const useCommand = (command: any, ...args: any[]) => {\n    const ref = useRef(null as unknown as { status: number, data?: any, message?: string });\n    const signal = useSignal();\n\n    useEffect(() => {\n        ref.current = { status: 102 };\n        \n        const fn = async () => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            ref.current = rq;\n            signal();\n        }\n        fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return ref.current;\n}\n\n/**\n * \n * @param command \n * @param args \n * @example\n * const dispatchCommand = useDispatchCommand();\n * ...\n * dispatchCommand(AccountCreate, \"mike.eling97@gmail.com\", \"ThisIsMyPassBro\")\n */\nexport const useDispatchCommand = () => {\n    const ref = useRef(null as unknown as (command: any, ...args: any[]) => Promise<{ status: number, data: any }>);\n    const signal = useSignal();\n    \n    if(ref.current === null) {\n        \n        const fn = async (command: any, ...args: any[]) => {\n            const _args = args || [];\n            \n            const rq = await cli.execute(new command(..._args))\n            signal();\n            return rq;\n        }\n        ref.current = (command: any, ...args: any[]) => fn(command, ...args);\n    }\n    \n    return ref.current;\n}\n\nexport const useAccount = (account_id?: string, updateStore: boolean = false, options?: { rooms?: boolean, flags?: boolean, contacts?: boolean }) => {\n    const currentAccount = useStore(state => state.currentAccount);\n    const ref = useRef<IAccount | null | undefined>(!account_id ? currentAccount ?? undefined : undefined);\n    const dispatchStore = useDispatch();\n    const dispatchCommand = useDispatchCommand();\n    const signal = useSignal();\n\n    useEffect(() => {\n        const fn = async () => {\n            const accountInfoRq = (await dispatchCommand(AccountInfo, account_id || currentAccount?.id, options?.flags, options?.rooms, options?.contacts ));\n    \n            if(accountInfoRq.status === 200) {\n                ref.current = accountInfoRq.data as IAccount | null;\n                if(updateStore) dispatchStore(setCurrentAccount(accountInfoRq.data));\n                signal();\n            }\n        }\n    \n        if(account_id || currentAccount?.id)\n            fn();\n            \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account_id]);\n    \n    return ref.current ?? null;\n}\n\nexport const useRoom = (room_id: string, accounts?: boolean) => {\n    const ref = useRef<IRoom | null | undefined>();\n    const dispatchCommand = useDispatchCommand();\n    const signal = useSignal();\n\n    useEffect(() => {\n        const fn = async () => {\n            const roomInfoRq = (await dispatchCommand(RoomInfo, room_id, !!accounts));\n\n            if(roomInfoRq.status === 200) {\n                ref.current = roomInfoRq.data as IRoom | null;\n                signal();\n            }\n        }\n\n        if(room_id) fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [room_id]);\n    \n    return ref.current ?? null;\n}","import React, { useEffect } from 'react';\nimport logo from \"assets/circles-logo.svg\";\nimport useStyles from \"./styles\";\nimport Flex from 'components/utils/Flex';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'store/hooks';\nimport { useStorage } from 'storage/hooks';\nimport { AccountInfo, AccountLogin } from 'api/commands';\nimport { setCurrentAccount } from 'store/actions';\nimport { useDispatchCommand } from 'api/hooks';\n\nconst Splash = () => {\n    const history = useHistory();\n    const state = history.location.state as { initialPath?: string };\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const dispatchCommand = useDispatchCommand();\n\n    const accountIdToken = useStorage(storage => storage.accountIdToken);\n    \n    useEffect(() => {\n        if(!accountIdToken) {\n            history.push(\"/intro\");\n            return;\n        }\n        \n        const fn = async () => {\n            const accountLogin = await dispatchCommand(AccountLogin, accountIdToken);\n\n            const account_id = accountLogin?.data?.account_id;\n            if(account_id) {\n                const accountInfo = (await dispatchCommand(AccountInfo, account_id, true, true, true));\n                if(accountInfo.status === 200) {\n                    dispatch(setCurrentAccount(accountInfo.data));\n\n                    if(accountInfo.data?.flags?.includes(\"needs_init\")) {\n                        history.push(\"/welcome\")\n                    } else {\n                        history.push(state?.initialPath ?? \"/home\")\n                    }\n                } else {\n                    history.push(\"/intro\")\n                }\n            } else {\n                history.push(\"/intro\")\n            }\n        }\n        fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\" height=\"100vh\">\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n        </Flex>\n}\n\nexport default Splash;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      \n    },\n    introViewRoot:{\n        maxWidth: theme.breakpoints.values.md,\n        margin: \"0 auto\",\n    },\n    introViewContentWrapper:{\n      maxWidth: \"60%\",\n      marginTop: \"5%\",\n    },\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Intro\",\n        pl_PL: \"Intro\",\n        de_DE: \"Intro\"\n    },\n    firstTitle: {\n        en_US: \"Welcome to safe chat!\",\n        pl_PL: \"Pierwszy Part\",\n        de_DE: \"Erstes Part\"\n    },\n\n    secondTitle: {\n        en_US: \"Available everywhere\",\n        pl_PL: \"Drugi Part\",\n        de_DE: \"Zweiten Part\"\n    },\n\n    thirdTitle: {\n        en_US: \"Reliable and Stable\",\n        pl_PL: \"Trzeci Part\",\n        de_DE: \"Dreien Part\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React from \"react\";\nimport { Button, Typography, Icon, useTheme } from \"@material-ui/core\";\nimport Flex from \"components/utils/Flex\";\nimport useStyles from \"./styles\";\n\ntype IntroViewProps = {\n    partId: number;\n    activePart: number;\n    \n    title: string;\n    description: string;\n    image: any;\n    \n    onNext: () => void;\n    onPrev: () => void;\n}\n\nconst IntroView = (props: IntroViewProps) => {\n    const classes = useStyles();\n\n    // Prevent rendering if not active.\n    if(props.activePart !== props.partId) return null;\n\n    // TODO: Add translations.\n    const prevButtonText = props.partId === 0 ? \"Skip\" : \"Back\";\n    const nextButtonText = props.partId === 2 ? \"Continue\" : \"Next\";\n\n    return <div className={classes.introViewRoot} style={{height: \"100vh\"}}>\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" height=\"90vh\" alignItems=\"center\" justifyContent=\"center\">\n                {/* Image */}\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                    <img src={props.image} alt={props.title} style={{maxWidth: \"300px\", height: \"auto\"}} />\n                </Flex>\n\n                {/* Content */}\n                <Flex className={classes.introViewContentWrapper} alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n                    <Typography variant=\"h2\">{props.title}</Typography>\n                    <Typography align=\"center\" paragraph >{props.description}</Typography>\n                </Flex>\n            </Flex>\n\n            {/* Actions */}\n            <Flex justifyContent=\"space-evenly\" height=\"10vh\" alignItems=\"center\" width=\"60%\">\n                <Button onClick={props.onPrev}>{prevButtonText}</Button>\n                <ProgressIcons activePart={props.activePart} />\n                <Button variant=\"contained\" color=\"primary\" onClick={props.onNext}>{nextButtonText}</Button>\n            </Flex>\n        </Flex>\n        \n        \n        \n        </div>\n}\n\nconst ProgressIcons = ({activePart} : {activePart: number}) => {\n    \n    return  <Flex justifyContent=\"center\" alignItems=\"center\">\n                <ProgressIcon active={activePart >= 0} />\n                <ProgressIcon active={activePart >= 1} />\n                <ProgressIcon active={activePart >= 2} />\n            </Flex>\n}\n\nconst ProgressIcon = ({active}: {active: boolean}) => {\n    const theme = useTheme();\n\n    return <Icon style={{ opacity: active ? 1 : 0.15, fontSize: \"14px\", color: active ? theme.palette.primary.main : \"#000\" }}>lens</Icon>;\n}\n\nexport default IntroView;\n","import React, { useState, useCallback } from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport IntroView from \"./IntroView\";\n\nimport intro00 from \"assets/intro00.svg\";\nimport intro01 from \"assets/intro01.svg\";\nimport intro02 from \"assets/intro02.svg\";\n\nimport { useHistory } from \"react-router-dom\";\n\n/**\n * Home page component.\n */\nconst Intro = () => {\n    // history.push(\"/path\");\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    // Controls the active part.\n    const [activePart, setActivePart] = useState<number>(0);\n    \n\n    const handleNext = useCallback(() => {\n        // To get the correct result, I'm looking up activePart (ap) passed to setActivePart method instead of using the in scope state variable.\n        setActivePart(ap => { \n\n            // Handle end of intro by navigating to login screen.\n            if(ap === 2) {\n                history.push(\"/login\");\n                // ? Changing value here after navigating might result in a memory leak as the Intro component is then unmounted. Move outside setActivePart and use \"activePart\" variable instead of \"ap\" to prevent state change.\n                return ap;\n            }\n\n            // Increment activePart.\n            return ap+1;\n        });\n    }, [setActivePart, history]);\n\n    const handlePrev = useCallback(() => {\n        setActivePart(ap => {\n\n            if(ap === 0) {\n                history.push(\"/login\");\n                return ap;\n            }\n\n            return ap-1;\n        });\n    }, [setActivePart, history]);\n\n    return <div className={classes.root}>\n        <IntroView activePart={activePart} partId={0} onNext={handleNext} onPrev={handlePrev} image={intro00} title={translated.firstTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n        <IntroView activePart={activePart} partId={1} onNext={handleNext} onPrev={handlePrev} image={intro01} title={translated.secondTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n        <IntroView activePart={activePart} partId={2} onNext={handleNext} onPrev={handlePrev} image={intro02} title={translated.thirdTitle} description=\"Sunt labore do deserunt consectetur fugiat. Eu dolor laborum elit non id amet Lorem aliqua velit. Elit in cillum elit magna incididunt esse.\" />\n    </div>\n}\n\nexport default Intro;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      minHeight: \"calc(100vh - (300px + 42px))\",\n      alignItems: \"center\",\n      //paddingTop: \"60px\"\n      [theme.breakpoints.up(\"sm\")]: {\n        minHeight: \"calc(100vh - (350px + 42px))\",\n        alignItems: \"flex-start\"\n      },\n    },\n    container: {\n      maxWidth: theme.breakpoints.values.md,\n      width: \"100%\",\n      padding: `0 ${theme.spacing(4)}px`,\n    },\n    inputWrapper: {\n\n    },\n    loginImage : {\n      width: \"auto\",\n      height: \"240px\",\n      position: \"absolute\",\n      right: \"2%\",\n      bottom: \"0px\",\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"310px\",\n        bottom: \"5px\"\n      },\n    },\n    imgContainer : {\n      height: \"300px\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      background: `linear-gradient(to top left, ${theme.palette.primary.dark}, ${theme.palette.primary.main})`,\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"350px\"\n      },\n    },\n    wave: {\n      position: \"absolute\",\n      zIndex: 5,\n      bottom: \"-10%\",\n      left: \"-1%\",\n      width: \"102%\",\n      height: \"auto\"\n    },\n    footerWrapper: {\n      maxWidth: theme.breakpoints.values.md,\n      margin: \"0 auto\",\n      padding: `0 ${theme.spacing(4)}px`,\n    }\n    \n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Sign in\",\n        pl_PL: \"Bądź w kontakcie!\",\n        de_DE: \"Stayen ins Touchejen\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import * as firebase from \"firebase/app\";\nimport { setLocalStorageValue } from \"storage/storage\";\n\nexport const signInWithPopup = async () => {\n    return new Promise((resolve, reject) => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n        \n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            resolve(result);\n            fetchAccountIdToken();\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n            reject(error);\n            // ...\n          });\n          \n    });\n}\n\nexport const signInWithCredentials = async (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                resolve(result);\n                fetchAccountIdToken();\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const fetchAccountIdToken = () => {\n    const currentUser = firebase?.auth()?.currentUser ?? null;\n    if(currentUser)\n        currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\n            setLocalStorageValue(\"accountIdToken\", idToken);\n        }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n        });\n}\n\nexport const signUpWithCredentials = async (email: string, password: string) => {\n    return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                resolve(result);\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const signOut = async () => {\n    return new Promise((resolve, reject) => {\n        firebase.auth().signOut()\n            .then((result) => {\n                resolve(result);\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(\"🔒 Authorization =>\", errorCode, errorMessage);\n                reject(error);\n                // ...\n            });\n    });\n}\n\nexport const getCurrentUserIdToken = async () => {\n    return new Promise<string>((resolve, reject) => {\n        firebase.auth()?.currentUser?.getIdToken(true).then(function(idToken) {\n            resolve(idToken);\n          }).catch(function(error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 User Id Token =>\", errorCode, errorMessage);\n            reject(error);\n          });\n    });\n}\n\n// TODO: Implement!\nexport const getDeviceToken = async () => {\n    return new Promise<string>((resolve, reject) => {\n        // Get Instance ID token. Initially this makes a network call, once retrieved\n        // subsequent calls to getToken will return from cache.\n        firebase.messaging().getToken().then((currentToken) => {\n            if (currentToken) {\n                resolve(currentToken)\n            } else {\n                console.log(\"🔒 Device Token =>\", \"No Instance ID token available. Request permission to generate one.\");\n                reject(new Error(\"No Instance ID token available. Request permission to generate one.\"));\n            }\n        }).catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(\"🔒 Device Token =>\", errorCode, errorMessage);\n            reject(error);\n        });\n  \n    });\n}","import React, { useState } from 'react';\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Button, TextField, Typography, Fab, Icon, CircularProgress, Backdrop } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Flex from \"components/utils/Flex\";\nimport loginImage from \"assets/verifed.svg\";\nimport waveAsset from \"assets/wave.svg\";\nimport { signInWithCredentials, signInWithPopup } from \"api/auth\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useDispatchCommand } from \"api/hooks\";\nimport { AccountInfo } from \"api/commands\";\nimport { useDispatch } from \"store/hooks\";\nimport { setCurrentAccount } from \"store/actions\";\n\n// TODO: Translations...?\n\n/**\n * Login page component.\n */\nconst Login = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n    const dispatchCommand = useDispatchCommand();\n    const dispatchStore = useDispatch();\n\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false)\n\n    const handleLogin = async (result: any) => {\n        const account = await dispatchCommand(AccountInfo, result?.user?.uid || \"\", true);\n\n        if (account.status === 200) {\n            //const accountIdToken = await getCurrentUserIdToken();\n            setIsLoading(false);\n\n            // ! Remember account id token.\n            //storageSetter(\"accountIdToken\", accountIdToken ?? \"\");\n            dispatchStore(setCurrentAccount(account.data));\n\n            if (account.data?.flags?.includes(\"needs_init\"))\n            {\n                history.push(\"/welcome\");\n            } else {\n                // TODO: Save device_token.\n                // const device_token = await getDeviceToken();\n                history.push(\"/home\");\n\n            }\n        } else if(account.status === 404) {\n            // TODO: Account not found! What shall be done then?\n            setIsLoading(false);\n            setErrorMsg(\"Account not found!\");\n        }\n\n    }\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setErrorMsg(\"\");\n        setIsLoading(true)\n\n        if (!isLoading) {\n            const email = emailInput;\n            const password = passwordInput;\n            signInWithCredentials(email, password).then(handleLogin).catch(err => {\n                setErrorMsg(err.message);\n                setIsLoading(false)\n            });\n        }\n    }\n\n    const handlePopupLogin = () => {\n        setErrorMsg(\"\");\n        setIsLoading(true)\n        signInWithPopup()\n            .then(handleLogin)\n            .catch((error) => {\n                setErrorMsg(error.message);\n            });\n\n    }\n\n    const handleInputChange = (inputName: string) => (event: React.FormEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        // @ts-ignore\n        const newValue = event?.target?.value ?? \"\";\n\n        if (!isLoading) {\n            if (inputName === \"email\") setEmailInput(newValue);\n            if (inputName === \"password\") setPasswordInput(newValue);\n        }\n    }\n\n    const handleBack = () => {\n        history.push(\"/signup\");\n    }\n\n    return <div style={{ width: \"100%\" }}>\n\n        <div className={classes.imgContainer}>\n            <img className={classes.loginImage} src={loginImage} alt=\"loginImage\" />\n            <img className={classes.wave} src={waveAsset} alt=\"\" />\n        </div>\n\n\n        <Flex justifyContent=\"center\" width=\"100%\" className={classes.root}>\n            <div className={classes.container}>\n                <Typography variant=\"h3\" paragraph>\n                    {translated.title}\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Flex className={classes.inputWrapper} flexDirection=\"column\">\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"email-input\" value={emailInput} onChange={handleInputChange(\"email\")} type=\"email\" label=\"E-Mail\" variant=\"outlined\" />\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"password-input\" value={passwordInput} onChange={handleInputChange(\"password\")} type=\"password\" label=\"Password\" variant=\"outlined\" />\n                    </Flex>\n\n                    {errorMsg && <Alert style={{ margin: \"10px 0\" }} severity=\"error\">\n                        <AlertTitle>Upps...</AlertTitle>\n                        {errorMsg}\n                    </Alert>}\n\n                    <Flex justifyContent=\"space-between\">\n                        <Button onClick={handleBack} color=\"primary\" type=\"button\">Sign Up</Button>\n                        <Fab color=\"primary\" aria-label=\"add\" type=\"submit\">\n                            <Icon style={{ color: \"white\" }}>keyboard_arrow_right</Icon>\n                        </Fab>\n                    </Flex>\n\n                </form>\n                <Button onClick={handlePopupLogin} type=\"button\">Login with Google!</Button>\n            </div>\n        </Flex>\n        <Flex className={classes.footerWrapper} alignItems=\"center\" justifyContent=\"flex-end\" height=\"42px\">\n            <Typography align=\"right\">Forgot password?</Typography>\n        </Flex>\n\n        {!isLoading ? null :\n            <Backdrop open={true} style={{zIndex:5}}>\n                <CircularProgress color=\"primary\" />\n            </Backdrop>}\n\n    </div>\n}\n\nexport default Login;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      minHeight: \"calc(100vh - (300px + 42px))\",\n      alignItems: \"center\",\n      //paddingTop: \"60px\"\n      [theme.breakpoints.up(\"sm\")]: {\n        minHeight: \"calc(100vh - (350px + 42px))\",\n        alignItems: \"flex-start\"\n      },\n    },\n    container: {\n      maxWidth: theme.breakpoints.values.md,\n      width: \"100%\",\n      padding: `0 ${theme.spacing(4)}px`,\n    },\n    inputWrapper: {\n\n    },\n    signImage : {\n      width: \"auto\",\n      height: \"240px\",\n      position: \"absolute\",\n      right: \"2%\",\n      bottom: \"0px\",\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"310px\",\n        bottom: \"5px\"\n      },\n    },\n    imgContainer : {\n      height: \"300px\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      background: `linear-gradient(to top left, ${theme.palette.primary.dark}, ${theme.palette.primary.main})`,\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"350px\"\n      },\n    },\n    wave: {\n      position: \"absolute\",\n      zIndex: 5,\n      bottom: \"-10%\",\n      left: \"-1%\",\n      width: \"102%\",\n      height: \"auto\"\n    },\n    footerWrapper: {\n      maxWidth: theme.breakpoints.values.md,\n      margin: \"0 auto\",\n      padding: `0 ${theme.spacing(4)}px`,\n    }\n    \n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Sign up\",\n        pl_PL: \"Bądź w kontakcie!\",\n        de_DE: \"Stayen ins Touchejen\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React, { useState } from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Button, TextField, Typography, Fab, Icon, Backdrop, CircularProgress } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Flex from \"components/utils/Flex\";\nimport signImage from \"assets/celebration.svg\";\nimport waveAsset from \"assets/wave.svg\";\nimport { signUpWithCredentials } from \"api/auth\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useStorageSetter } from \"storage/hooks\";\n\n// TODO: Translations...?\n\n/**\n * Login page component.\n */\nconst Signup = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    const storageSetter = useStorageSetter();\n\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState(\"\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false)\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setErrorMsg(\"\");\n        setIsLoading(true)\n\n        if (!isLoading) {\n            const email = emailInput;\n            const password = passwordInput;\n            const confirmPassword = confirmPasswordInput;\n\n            if (confirmPassword !== password) {\n                setErrorMsg(\"Passwords are not identical.\");\n                setIsLoading(false);\n                return;\n            }\n\n            if (password.length < 13) {\n                setErrorMsg(\"Password is too short.\");\n                setIsLoading(false);\n                return;\n            }\n\n            signUpWithCredentials(email, password).then(async (result: any) => {\n                console.log(\"Result =>\", result);\n\n                /*const acc = await dispatchCommand(AccountCreate, { email: emailInput, password: passwordInput });\n                console.log(\"Account Data =>\", acc);\n                if(acc.status === 200) {\n                    storageSetter(\"currentAccountId\", acc.data.account_id);\n                    \n                    console.log(\"All success! Fuck yea!\");\n                    history.push(\"/welcome\");\n                } else if(acc.status === 404) {\n                    // TODO: Account not found!\n                    setErrorMsg(\"Account not found!\");\n                }*/\n                result?.user?.uid && storageSetter(\"accountIdToken\", result.user.uid)\n\n                history.push(\"/welcome\");\n\n            }).catch(err => {\n                setErrorMsg(err.message);\n                setIsLoading(false);\n            });\n        }\n    }\n\n    const handleInputChange = (inputName: string) => (event: React.FormEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        // @ts-ignore\n        const newValue = event?.target?.value ?? \"\";\n        if (!isLoading) {\n            if (inputName === \"email\") setEmailInput(newValue);\n            if (inputName === \"password\") setPasswordInput(newValue);\n            if (inputName === \"password-confirm\") setConfirmPasswordInput(newValue);\n        }\n\n    }\n\n    const handleBack = () => {\n        history.push(\"/login\");\n    }\n\n    return <div style={{ width: \"100%\" }}>\n\n        <div className={classes.imgContainer}>\n            <img className={classes.signImage} src={signImage} alt=\"signImage\" />\n            <img className={classes.wave} src={waveAsset} alt=\"\" />\n        </div>\n\n\n        <Flex justifyContent=\"center\" width=\"100%\" className={classes.root}>\n            <div className={classes.container}>\n                <Typography variant=\"h3\" paragraph>\n                    {translated.title}\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <Flex className={classes.inputWrapper} flexDirection=\"column\">\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"email-input\" value={emailInput} onChange={handleInputChange(\"email\")} type=\"email\" label=\"E-mail\" variant=\"outlined\" />\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"password-input\" value={passwordInput} onChange={handleInputChange(\"password\")} type=\"password\" label=\"Password\" variant=\"outlined\" />\n                        <TextField style={{ marginBottom: \"15px\" }} id=\"confirm-password-input\" value={confirmPasswordInput} onChange={handleInputChange(\"password-confirm\")} type=\"password\" label=\"Confirm password\" variant=\"outlined\" />\n                    </Flex>\n\n                    {errorMsg && <Alert style={{ margin: \"10px 0\" }} severity=\"error\">\n                        <AlertTitle>Upps...</AlertTitle>\n                        {errorMsg}\n                    </Alert>}\n\n                    <Flex justifyContent=\"space-between\">\n                        <Button onClick={handleBack} color=\"primary\" type=\"button\">Login</Button>\n                        <Fab color=\"primary\" aria-label=\"add\" type=\"submit\">\n                            <Icon style={{ color: \"white\" }}>keyboard_arrow_right</Icon>\n                        </Fab>\n                    </Flex>\n\n                </form>\n            </div>\n        </Flex>\n        <Flex className={classes.footerWrapper} alignItems=\"center\" justifyContent=\"flex-end\" height=\"42px\">\n            <Typography align=\"right\"></Typography>\n        </Flex>\n        {!isLoading ? null :\n            <Backdrop open={true} style={{ zIndex: 5 }}>\n                <CircularProgress color=\"primary\" />\n            </Backdrop>}\n\n    </div>\n}\n\nexport default Signup;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      position: \"relative\",\n      maxWidth: theme.breakpoints.values.md,\n      margin: \"0 auto\",\n      padding: `0 ${theme.spacing(4)}`      \n\n    },\n    inputWrapper: {\n\n    },\n    wave: {\n      position: \"absolute\",\n      zIndex: 5,\n      bottom: \"-10%\",\n      left: \"-1%\",\n      width: \"102%\",\n      height: \"auto\"\n    },\n\n    personalImage : {\n      width: \"auto\",\n      height: \"240px\",\n      position: \"absolute\",\n      right: \"2%\",\n      bottom: \"0px\",\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"310px\",\n        bottom: \"5px\"\n      },\n    },\n\n    imgContainer: {\n      height: \"300px\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      background: `linear-gradient(to top left, ${theme.palette.primary.dark}, ${theme.palette.primary.main})`,\n\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"350px\"\n      },\n    },\n    welcomeTitle: {\n      color: theme.palette.primary.main\n    }\n\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Welcome,\",\n        pl_PL: \"Witamy\",\n        de_DE: \"Willkommen\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React, { useState } from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Typography } from \"@material-ui/core\";\nimport { useStore, useDispatch } from \"store/hooks\";\nimport { TextField } from '@material-ui/core';\nimport Flex from \"components/utils/Flex\";\nimport Button from '@material-ui/core/Button';\nimport waveAsset from \"assets/wave.svg\";\nimport personalInformationImage from \"assets/personal.svg\";\nimport { useDispatchCommand } from \"api/hooks\";\nimport { AccountChange, AccountInfo } from \"api/commands\";\nimport { setCurrentAccount } from \"store/actions\";\nimport { useHistory } from \"react-router-dom\";\n\ntype EditableField = \"label\" | \"name\" | \"surname\";\n\n/**\n * Welcome page component.\n */\nconst Welcome = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    const dispatchStore = useDispatch();\n    const dispatchCommand = useDispatchCommand();\n    const currentAccount = useStore(state => state.currentAccount);\n\n    const [labelField, setLabelField] = useState(currentAccount?.label ?? \"\");\n    const [nameField, setNameField] = useState(currentAccount?.name ?? \"\");\n    const [surnameField, setSurnameField] = useState(currentAccount?.surname ?? \"\");\n\n    const handleChange = (event: any) => {\n        const field = (event?.target?.id ?? \"\") as EditableField;\n        const value = event?.target?.value ?? \"\";\n\n        switch(field) {\n            case \"label\":\n                setLabelField(value)\n                break;\n            case \"name\":\n                setNameField(value)\n                break;\n            case \"surname\":\n                setSurnameField(value)\n                break;\n            // ...\n        }\n    }\n\n    const handleSubmit = async () => {\n\n        if(labelField && nameField && surnameField) {\n            const changeRq = await dispatchCommand(AccountChange, currentAccount?.id || \"\", { label: labelField, name: nameField, surname: surnameField });\n\n            if(changeRq.status === 204) {\n                const account = await dispatchCommand(AccountInfo, currentAccount?.id || \"\", true);\n\n                if(account.status === 200) {\n                    dispatchStore(setCurrentAccount(account.data));\n                }\n\n                history.push(\"/home\");\n            }\n        } else {\n            // TODO: Error message and Alert component!\n            alert(\"Implement error handling!\");\n        }\n    }\n\n    return <div>\n        <div className={classes.imgContainer}>\n            <img className={classes.personalImage} src={personalInformationImage}  alt=\"PersonalInformation\"/>\n            <img className={classes.wave} src={waveAsset}  alt=\"wave\"/>\n        </div>\n            <div className={classes.root}>\n\n            <Typography className={classes.welcomeTitle} variant=\"h2\">{translated.title} {currentAccount?.label}</Typography>\n            \n            <Typography style={{opacity: \"0.7\", marginBottom: \"35px\"}} paragraph>Here you need to provide us with some data about you. Name, Surname etc.</Typography>\n            \n            <Typography style={{paddingBottom: \"16px\"}} variant=\"h4\">Personal information</Typography>\n            <Flex flexDirection=\"column\" className={classes.inputWrapper}>        \n                <TextField style={{ marginBottom: \"15px\" }} id=\"label\" label=\"Label\" variant=\"outlined\" value={labelField} onChange={handleChange} />\n                <TextField style={{ marginBottom: \"15px\" }} id=\"name\" label=\"Name\" variant=\"outlined\" value={nameField} onChange={handleChange} />\n                <TextField style={{ marginBottom: \"15px\" }} id=\"surname\" label=\"Surname\" variant=\"outlined\" value={surnameField} onChange={handleChange} />\n            </Flex>\n\n                <Button style={{color: \"white\", float: \"right\", marginBottom: \"15px\"}} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Save</Button>\n            \n        </div>\n\n    </div>\n}\n\nexport default Welcome;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      \n    }\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Home\",\n        pl_PL: \"Strona główna\",\n        de_DE: \"Startseite\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n}));\n\nexport default useStyles;","import React, { useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { useCommand } from \"api/hooks\";\nimport { AccountList } from \"api/commands\";\nimport { useForkedState } from \"utils/hooks/general\";\nimport { isLoaded } from \"api/utils\";\nimport { IAccount } from \"types\";\nimport { CircularProgress, Avatar, Typography, Icon } from \"@material-ui/core\";\nimport { useStore } from \"store/hooks\";\nimport Flex from \"components/utils/Flex\";\n\ntype AccountPickerProps = {\n    onChange: React.Dispatch<React.SetStateAction<string[]>> | React.Dispatch<React.SetStateAction<string>>;\n    value: string | string[]\n    multiple?: boolean;\n    style?: any;\n    disabled?: boolean;\n}\n\n/**\n * \n * describe this function...\n */\nconst AccountPicker = (props: AccountPickerProps) => {\n    const classes = useStyles();\n\n    const currentAccount = useStore(state => state.currentAccount);\n\n    const accountsRq = useCommand(AccountList, currentAccount?.contacts?.map(contact => contact.account_id));\n    const [accounts] = useForkedState(rq => isLoaded(rq) ? rq.data : null, accountsRq)\n\n    useEffect(() => {\n        // @ts-ignore\n        props.onChange((prevValue: any) => ([]));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = (account_id: string) => {\n        if(props.disabled) return;\n\n        // TODO: Ugly code, refactor that!!\n        // @ts-ignore\n        props.onChange((value: any) => {\n            if(props.multiple && Array.isArray(value)) {\n                let arr = [...value];\n\n                if(arr.includes(account_id)) arr.splice(value.indexOf(account_id), 1);\n                else arr.push(account_id);\n    \n                return [...arr];\n            } else {\n                return value === account_id ? \"\" : account_id;\n            }\n        });\n    }\n\n    if(!accounts) return <Flex width=\"100%\" height=\"60px\" alignItems=\"center\" justifyContent=\"center\"><CircularProgress /></Flex>\n\n    return <div className={classes.root} style={props.style}>\n        {\n            accounts.map((account: IAccount) =>\n                <SingleAccount key={account.id} account={account} onClick={(account_id) => handleChange(account_id)} selected={props.value.includes(account.id)} /> )\n        }\n    </div>\n}\n\n/**\n * \n * Describe this function...\n */\nconst SingleAccount = ({ account, onClick, selected }: { account: IAccount, onClick: (account_id: string) => void, selected: boolean }) => {\n\n    const handleClick = () => {\n        onClick(account.id);\n    }\n\n    return <Flex style={{paddingTop: \"12px\", cursor: \"pointer\"}} onClick={handleClick} justifyContent=\"flex-start\" alignItems=\"center\">\n            <Avatar \n                style={{width: \"54px\", height: \"54px\", backgroundColor: selected ? \"green\" : \"initial\"}} \n                alt={account.label}  \n                src={selected ? undefined : account.avatar_url }>\n                    {selected ? <Icon>check</Icon> : account.label}\n                </Avatar>\n\n            <div style={{margin: \"0 0 0 20px\"}}>\n                <Typography style={{margin: \"0\"}} variant=\"h6\">{account.label}</Typography>\n                <Typography style={{margin: \"0\", opacity: \".6\"}}>{account.email}</Typography>\n            </div>\n        </Flex>\n}\n\nexport default AccountPicker;","import React from 'react'\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Typography } from '@material-ui/core';\nimport AccountPicker from 'components/common/AccountPicker';\nimport { useHistory } from 'react-router-dom';\nimport { useStore, useDispatch } from 'store/hooks';\nimport { useDispatchCommand } from 'api/hooks';\nimport { RoomCreate } from 'api/commands';\nimport Flex from 'components/utils/Flex';\nimport { Alert } from '@material-ui/lab';\nimport { updateCurrentAccount } from 'store/actions';\n\nconst CreateRoom = () => {\n    const [error, setError] = React.useState(\"\");\n    const [loading, setLoading] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [label, setLabel] = React.useState(\"\");\n  \n    const history = useHistory();\n    const currentAccount = useStore(state => state.currentAccount);\n    const dispatchCommand = useDispatchCommand();\n    const dispatchStore = useDispatch();\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleSubmit = async () => {\n      setLoading(true);\n      const newRoom = await dispatchCommand(RoomCreate, currentAccount?.id ?? \"\", label, selected);\n\n      if (newRoom.status === 200) {\n        // Refetch current account to display updated rooms list.\n        dispatchStore(await updateCurrentAccount(currentAccount?.id ?? \"\"));\n\n        const room_id = newRoom!.data!.room_id;\n        history.push(`/room/${room_id}`)\n      } else if(newRoom.status === 404) {\n        // @ts-ignore\n        setError(newRoom?.message ?? \"Unexpected error occurred\")\n      }\n\n      setLoading(false);\n    }\n\n    const handleLabelChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      // @ts-ignore\n      const value = event?.target?.value ?? \"\";\n\n      setLabel(value);\n    }\n\n    const isSubmitDisabled = label.length === 0 || selected.length === 0 || loading;\n\n    return <div>\n        <Button variant=\"contained\" onClick={handleClickOpen}>Create Room</Button>\n        \n        <Dialog fullWidth onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n          <DialogTitle id=\"customized-dialog-title\">\n            Create room\n          </DialogTitle>\n          \n          <DialogContent dividers>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n\n            <TextField disabled={loading} fullWidth id=\"outlined-basic\" label=\"Room name\" value={label} onChange={handleLabelChange} variant=\"outlined\" />\n\n            <Typography style={{marginTop: \"35px\"}} variant=\"h5\" >Invite friends</Typography>\n            \n            <AccountPicker disabled={loading} style={{margin: \"20px 0\"}} multiple value={selected} onChange={setSelected} />\n          </DialogContent>\n          \n          <DialogActions>\n            <Flex width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n              \n              {selected.length > 0 ? <Typography>Selected {selected.length} {selected.length > 1 ? \"friends\" : \"friend\"}</Typography>\n              : <Typography>Select a friend</Typography>}\n\n              <div>\n                <Button autoFocus onClick={handleClose} color=\"primary\">\n                  Close\n                </Button>\n                <Button disabled={isSubmitDisabled} autoFocus onClick={handleSubmit} color=\"primary\">\n                  Create\n                </Button>\n              </div>\n            </Flex>\n          </DialogActions>\n        </Dialog>\n    </div>\n\n\n}\n\n\n\nexport default CreateRoom;","import React from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { Button, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStore, useDispatch } from \"store/hooks\";\nimport { signOut } from \"api/auth\";\nimport { useStorageSetter } from \"storage/hooks\";\nimport { setCurrentAccount } from \"store/actions\";\nimport Flex from \"components/utils/Flex\";\nimport { IRoom } from \"types\";\nimport CreateRoom from \"./CreateRoom\";\n\n\n\n/**\n * Home page component.\n */\nconst Home = () => {\n    const history = useHistory();\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n    const storageSetter = useStorageSetter();\n    const storeDispatch = useDispatch();\n\n    const currentAccount = useStore(state => state.currentAccount);\n\n    const handleSignOut = async () => {\n        await signOut();\n        storageSetter(\"accountIdToken\");\n        storeDispatch(setCurrentAccount(null));\n        history.push(\"/login\");\n    }\n\n    return <div className={classes.root}>\n        {translated.title}\n        <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            {currentAccount && <Button onClick={() => history.push(\"/profile\")}>{currentAccount.label} Profile</Button>}\n            {currentAccount && <Button variant=\"contained\" onClick={handleSignOut}>Sign out</Button>}\n        </Flex>\n\n        <br/>\n        <Typography variant=\"h2\" gutterBottom>Rooms</Typography>\n        {\n            currentAccount?.rooms && currentAccount.rooms.map(room => <RoomLabel key={room.id} {...room} />)\n        }\n    <CreateRoom />\n    </div>\n}\n\nconst RoomLabel = (props: IRoom) => {\n    const history = useHistory();\n\n    return <Typography onClick={() => history.push(`/room/${props.id}`)}>{props.label}</Typography>\n}\n\nexport default Home;","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      \n    }\n  }));\n\n  export default useStyles;\n","// * Translations\nconst translations = (preset: any) => ({\n    title: {\n        en_US: \"Profile\",\n        pl_PL: \"Profil\",\n        de_DE: \"Profil\"\n    },\n    // Example preset use. See src/utils/hooks/locale.ts for more.\n    yes: preset.yes\n})\n\nexport default translations;","import React from \"react\";\nimport { useLittera } from \"react-littera\";\nimport useStyles from \"./styles\"\nimport translations from \"./trans\"\nimport { CircularProgress, Typography } from \"@material-ui/core\";\nimport { useAccount } from \"api/hooks\";\n\n\n/**\n * Profile page component.\n */\nconst Profile = () => {\n    const [translated] = useLittera(translations);\n    const classes = useStyles();\n\n    const currentAccount = useAccount(undefined, true);\n\n    if(!currentAccount) return <CircularProgress />\n\n    return <div className={classes.root}>\n        {translated.title}\n        <img  alt=\"profile\" src={currentAccount.avatar_url} style={{width: \"220px\", height: \"auto\"}} />\n        <Typography paragraph>{currentAccount.label}</Typography>\n        <Typography paragraph>{currentAccount.name}</Typography>\n        <Typography paragraph>{currentAccount.surname}</Typography>\n        <Typography paragraph>{currentAccount.email}</Typography>\n        <br/>\n        <Typography variant=\"h3\">Contacts:</Typography>\n        {\n            currentAccount?.contacts && currentAccount.contacts.map(contact => <Contact key={contact.account_id} {...contact} />)\n        }\n    </div>\n}\n\nconst Contact = (props: { account_id: string, favorite?: boolean }) => {\n    const account = useAccount(props.account_id, false, { flags: true, rooms: true, contacts: true });\n\n    if(!account) return <div>...</div>\n\n    return <div style={{border: \"1px solid #121212\"}}>\n        <img  alt=\"profile\" src={account.avatar_url} style={{width: \"220px\", height: \"auto\"}} />\n        <Typography gutterBottom variant=\"h4\">{account.label}</Typography>\n        <Typography >{account.name} {account.surname}</Typography>\n        <Typography>Is favorite? {props.favorite ? \"true\" : \"false\"}</Typography>\n    </div>\n}\n\nexport default Profile;","import * as firebase from \"firebase/app\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { IMessage } from \"types\";\nimport { useAudio } from \"utils/hooks/sound\";\n\nconst makeRefPath = (room_id: string) => {\n    return `rooms/${room_id}/messages`;\n}\n\nexport const useMessages = (room_id: string) => {\n    const [, toggle] = useAudio(\"https://cdn-02.anonfiles.com/B4z8W9Bbo8/14878adc-1592945278/notification_sound.mp3\");\n    const [messages, setMessages] = useState<any>(null);\n\n    useEffect(() => {\n        const messagesRef = firebase.database().ref(makeRefPath(room_id));\n\n        messagesRef.on('value', (snapshot) => {\n            const msgs = snapshot.val() ?? [];\n\n            setMessages((m: any) => {\n                if(m !== null && typeof toggle === \"function\") toggle();\n                return msgs;\n            });\n        })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [room_id]);\n\n    return messages as {[key: string]: IMessage};\n}\n\ntype SubmitFunction = ((value: string) => void);\n\nexport const useMessageSubmit = (room_id: string, account_id: string) => {\n\n    return useCallback((value: string) => {\n        const message = {\n            author: account_id,\n            value,\n            timestamp: new Date().toString()\n        }\n\n        //firebase.database().ref(makeRefPath(room_id)).set(message);\n        var newMsgKey = firebase.database().ref().child('rooms').child(room_id).child(\"messages\").push().key;\n\n        var updates: any = {};\n        updates[`/rooms/${room_id}/messages/${newMsgKey}`] = message;\n      \n        return firebase.database().ref().update(updates);\n\n    }, [account_id, room_id]) as SubmitFunction;\n}","import { useState, useEffect } from \"react\";\n\nexport const useAudio = (url: string) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      playing ? audio.play() : audio.pause();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [playing, toggle];\n};","import { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      position: \"relative\",\n      flexBasis: \"70%\",\n      width: \"70%\",\n      \n      [theme.breakpoints.down(\"sm\")]: {\n        flexBasis: \"100%\",\n        width: \"100%\",\n\n      }\n    },\n    messagesRoot: {\n      minWidth: \"70vw\",\n      width: \"100%\",\n      position: \"relative\",\n      maxHeight: \"calc(100vh - 36px)\",\n      height: \"90%\",\n      flexGrow: 1,\n      overflow: \"auto\",\n      display: \"flex\",\n      [theme.breakpoints.down(\"sm\")]: {\n        minWidth: \"99vw\" // TODO: Change to more static value.\n\n      }\n    },\n\n    messageRoot: {\n      margin: \"15px 0\"\n    },\n    ownedMessage: {\n      alignSelf: \"flex-end\",\n      color: \"#000\",\n      backgroundColor: \"#eee\"\n    },\n    notOwnedMessage: {\n      alignSelf: \"flex-start\",\n      color: \"#FFF\",\n      background: theme.palette.primary.main,\n    },\n    message: {\n      maxWidth: \"280px\",\n      position: \"relative\",\n      padding: \"16px 22px\",\n      borderRadius: \"250px\",\n    },\n    avatar: { borderRadius: \"28px\", width: \"28px\", height: \"28px\", backgroundColor: \"white\", right: \"-20px\", bottom: \"-10px\", position: \"relative\", padding: \"3px\", zIndex: 5 }\n  }));\n\n  export default useStyles;","import React, { useCallback } from \"react\";\nimport { CircularProgress, Typography } from \"@material-ui/core\";\nimport { useMessages } from \"api/messages\";\nimport { IAccount, IMessage } from \"types\";\nimport { useStore } from \"store/hooks\";\nimport useStyles from \"./styles\";\nimport Flex from \"components/utils/Flex\";\nimport cx from \"classnames\";\nimport { validURL } from \"utils/general\";\n\nconst Messages = ({ roomId, accounts }: { roomId: string, accounts: IAccount[] }) => {\n    const classes = useStyles();\n    const messages = useMessages(roomId);\n\n    const getAuthor = useCallback((author_id) => accounts.find(account => account.id === author_id) ?? null, [accounts]);\n    const currentAccount = useStore(state => state.currentAccount ?? null);\n\n    if(!messages) return <CircularProgress />\n\n    if(Object.keys(messages).length === 0) return <Typography variant=\"h2\">Say Hi!</Typography>\n\n    return <Flex flexDirection=\"column-reverse\" className={classes.messagesRoot}>\n        {\n            Object.keys(messages).reverse().map((message_id: string) => {\n\n                const message = messages[message_id];\n                return <Message \n                            key={message_id} \n                            message={message} \n                            author={getAuthor(message.author)} \n                            isOwned={currentAccount?.id === message.author} />\n            })\n        }\n    </Flex>\n}\n\nconst Message = ({ message, author, isOwned }: { message: IMessage, author: IAccount | null, isOwned: boolean }) => {\n    const classes = useStyles();\n\n    let value = message.value;\n    try {\n        value = atob(message.value);\n    } catch(err) {\n        console.log(err);\n    }\n\n    const rootClasses = cx(classes.message, { [classes.ownedMessage]: isOwned, [classes.notOwnedMessage]: !isOwned });\n\n    const valEl = validURL(value) ? \n                    <a href={value} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a> \n                    : value;\n\n    return <Flex alignItems=\"flex-end\" className={classes.messageRoot} style={{ alignSelf: isOwned ? \"flex-end\" : \"flex-start\" }}>\n        { !isOwned && author?.avatar_url && <img alt=\"author avatar\" src={author.avatar_url} className={classes.avatar} />}\n        <div className={rootClasses}>{valEl}</div>\n    </Flex>\n}\n\nexport default Messages;","export function validURL(str: string) {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n      '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n}","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    inputElement: {\n        borderRadius: \"20px\",\n        border: \"0\",\n        outline: \"none\",\n        background: \"#e0e0e0\",\n        padding: \"12px 15px\",\n        minWidth: \"80vw\",\n        minHeight: \"16px\",\n        \n\n        resize: \"none\"\n    }\n}));\n\nexport default useStyles;","import React from \"react\";\nimport useStyles from \"./styles\";\n\n// TODO: ref type.\nconst MessageInput = (props: { ref?: any, value: string, onChange: (event: React.FormEvent<HTMLTextAreaElement | HTMLInputElement>) => void, onSubmit?: () => void }) => {\n    const classes = useStyles();\n\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if(event.key === \"Enter\" && !event.shiftKey) {\n            event.preventDefault();\n            props.onSubmit && props.onSubmit();\n        }\n    }\n\n    return <div className={classes.root}>\n        <textarea onKeyPress={handleKeyPress} ref={props.ref} value={props.value} onChange={props.onChange} placeholder=\"Write your message...\" className={classes.inputElement} />\n    </div>\n}\n\nexport default MessageInput;","import React, { useState, useRef } from 'react';\nimport { IconButton, Icon } from '@material-ui/core';\nimport MessageInput from 'components/common/MessageInput';\n\nconst MessageForm = (props: { onSubmit: (value: string) => void }) => {\n    const [input, setInput] = useState(\"\");\n\n    const ref = useRef<HTMLInputElement | undefined>();\n\n    const handleTextFieldFocus = () => {\n        if(ref.current)\n            ref.current?.focus();\n    }\n\n    const handleSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n        if(event) event.preventDefault();\n\n        if(input.length > 0) {\n            try {\n                props.onSubmit(btoa(input));\n                setInput(\"\");\n                handleTextFieldFocus();\n            } catch(err) {\n                console.log(err);\n                alert(\"Message contains invalid characters.\")\n            }\n        }\n    }\n    \n    const handleChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        // @ts-ignore\n        setInput(event.target?.value ?? \"\");\n    }\n\n    return <form id=\"message-form\" style={{width: \"100%\", minHeight:\"36px\", position: \"relative\", display: \"flex\", alignItems: \"center\"}} onSubmit={handleSubmit}>\n        <MessageInput ref={ref} value={input} onChange={handleChange} onSubmit={handleSubmit} />\n        <IconButton onClick={() => handleSubmit()}>\n            <Icon color=\"primary\">send</Icon>\n        </IconButton>\n    </form>\n}\n\nexport default MessageForm;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useStyles from \"../Splash/styles\";\nimport { useStore } from \"store/hooks\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Messages from \"./Messages\";\nimport MessageForm from \"./MessageForm\";\nimport { useRoom } from \"api/hooks\";\nimport { useMessageSubmit } from \"api/messages\";\n\nconst RoomView = () => {\n    const params = useParams<{id: string}>();\n    const classes = useStyles();\n\n    const currentAccount = useStore(state => state.currentAccount);\n    const room = useRoom(params.id);\n    const submitMessage = useMessageSubmit(params.id, currentAccount?.id ?? \"\");\n\n    if(!room || !room.id) return <CircularProgress />\n\n    return <div className={classes.root}>\n        \n        {/* <Flex justifyContent=\"flex-start\">\n                <Typography variant=\"h4\">{room.label}</Typography>\n        </Flex>\n        <hr style={{width: \"70vw\"}}/>\n        <br/>*/}\n        <Messages accounts={room?.accounts ?? []} roomId={room.id} />\n        <MessageForm onSubmit={submitMessage} />\n    </div>\n}\n\nexport default RoomView;\n","import React from \"react\"\nimport { useStore } from \"store/hooks\";\nimport { IRoom } from \"types\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst RecentRooms = ({ currentRoomId }: { currentRoomId: string }) => {\n    const currentAccount = useStore(state => state.currentAccount);\n\n    return <div style={{flexBasis: \"30%\", width: \"30%\"}}>\n        {\n            (currentAccount?.rooms ?? [])\n                .sort(room => room.id === currentRoomId ? -1 : 1)\n                .map(room => <RecentRoom room={room} currentRoomId={currentRoomId} />)\n        }\n    </div>\n}\n\nconst RecentRoom = ({ room, currentRoomId }: { room: IRoom, currentRoomId: string }) => {\n    const history = useHistory();\n\n    if(room.id === currentRoomId) return <p><b>{room.label}</b></p>\n\n    const handleClick = () => {\n        history.push(`/room/${room.id}`)\n    }\n\n    return <p onClick={handleClick}>{room.label}</p>\n}\n\n\nexport default RecentRooms;","import React from \"react\";\nimport Flex from \"components/utils/Flex\";\nimport RoomView from \"./RoomView\";\nimport RecentRooms from \"./RecentRooms\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\n\n/**\n * Room page component.\n */\nconst Room = () => {\n    const theme = useTheme();\n    const isMobileOnly = useMediaQuery(theme.breakpoints.down('sm'));\n    const params = useParams<{id: string}>();\n\n    return <Flex width=\"100%\" height=\"100vh\">\n        {!isMobileOnly && <RecentRooms currentRoomId={params.id} />}\n        <RoomView />\n    </Flex>\n}\n\nexport default Room;\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation, useHistory } from \"react-router-dom\";\nimport { Home, Splash, Intro, Profile, Login, Signup, Welcome, Room } from 'components/pages';\nimport { Button } from '@material-ui/core';\n\nfunction Routes() {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if(location.pathname !== \"/\") {\n      history.push({pathname: \"/\", state:{ initialPath: location.pathname }});\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  return (\n    <Switch>\n      <Route exact path=\"/\"       component={Splash} />\n      <Route exact path=\"/intro\"  component={Intro} />\n      <Route exact path=\"/signup\"  component={Signup} />\n      <Route exact path=\"/welcome\"  component={Welcome} />\n      <Route exact path=\"/login\"  component={Login} />\n      <Route exact path=\"/home\"   component={Home} />\n      <Route exact path=\"/profile\"  component={Profile} />\n      <Route path=\"/room/:id\"  component={Room} />\n      {/* TODO: Move to a file... */}\n      <Route exact component={() => <div>Error page <br/> <Button variant=\"contained\" onClick={() => history.push(\"/\")}>Reload</Button></div>} />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#449ee2\"\n        },\n        secondary: {\n            main: \"#99d8ff\"\n        },\n        background: {\n            default: \"#FAFAFA\"\n        }\n    },\n    spacing: 4\n\n  })","import {useState} from \"react\";\n\nconst LOCALES = Object.freeze([ \"en_US\", \"pl_PL\", \"de_DE\" ]);\n\nconst PRESET = Object.freeze({\n    yes: {\n        en_US: \"Yes\",\n        pl_PL: \"Tak\",\n        de_DE: \"Ja\"\n    },\n    no: {\n        en_US: \"No\",\n        pl_PL: \"Nie\",\n        de_DE: \"Nein\"\n    }\n});\n\nexport const useLocale = () => {\n    const [locale, setLocale] = useState(LOCALES[0]);\n\n    return [locale, setLocale, PRESET];\n}","import React, { useState } from \"react\";\nimport { StoreContext, IState, INITIAL_STATE } from \"./context\";\n\n\ntype StoreProviderProps = {\n    children: JSX.Element;\n    initialState?: IState\n}\n\n/**\n * React component providing Store context.\n */\nconst StoreProvider = ({ children, initialState }: StoreProviderProps) => {\n    const [value, setValue] = useState<IState>(initialState ?? INITIAL_STATE);\n\n    return <StoreContext.Provider value={[value, setValue]}>\n        {children}\n    </StoreContext.Provider>\n}\n\nexport default StoreProvider;","import React from 'react';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport LitteraProvider from \"react-littera\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Routes from './Routes';\nimport theme from \"./theme\";\nimport { useLocale } from './utils/hooks/locale';\nimport StoreProvider from 'store/StoreProvider';\n\nfunction App() {\n  const [language, setLanguage, preset] = useLocale();\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={theme}>\n        <LitteraProvider language={language} setLanguage={setLanguage} preset={preset}>\n          <Router basename={process.env.REACT_APP_BASENAME ?? \"/\"}>\n            <Routes />\n          </Router>\n        </LitteraProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase/app';\n \nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/messaging';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID,\n});\n\nfirebase.messaging().usePublicVapidKey(\"BFpEHR0UHDMxqVkWLbe884ukhegFUVl-SPUGpDaG2PG9BaQMr5BmNeq3BAyzMfqMD-kiJV-dwQKEDcubgNMRozw\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/wave.21665015.svg\";","module.exports = __webpack_public_path__ + \"static/media/circles-logo.b212bb26.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro00.563800af.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro01.37601bb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro02.1847156e.svg\";","module.exports = __webpack_public_path__ + \"static/media/verifed.1d3d7325.svg\";","module.exports = __webpack_public_path__ + \"static/media/celebration.bc0c3204.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal.ce3bc716.svg\";"],"sourceRoot":""}